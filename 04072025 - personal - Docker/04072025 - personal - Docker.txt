- FROM
- WORKDIR
- COPY
- ADD
- RUN
- ENV
- EXPOSE
- USER
- CMD
- ENTRYPOINT


FROM python:3.12.4-slim
WORKDIR /app
COPY core/requirements.txt /app/
RUN pip install -r requirements.txt
COPY core /app/
COPY shscripts /shscripts
RUN chmod +x /shscripts/entrypoint.sh
ENTRYPOINT ["/shscripts/entrypoint.sh"]



docker run -it imageName
docker run -it ubuntu



docker build -t react-app:latest .



docker start -i containerID



docker stop containerID



docker container prune
docker image prune
docker image rm repoOrImageID




docker image rm jmgchengisi/react-app
docker image tag bf5129087df6 jmgchengisi/react-app:latest
docker push jmgchengisi/react-app:latest



docker login


docker push jmgcheng/react-app:latest
docker pull jmgcheng/react-app:latest


docker images
docker ps









# -d is detached mode
# -p is port, 1st value is your host, 2nd value is port inside container
docker run -d -p 3000:3000 react-app

docker run -d -p 3001:3000 --name pinkstart react-app

docker logs -f containerID

docker exec -it pinkstart sh





docker volume create volumeName
docker volume create app-data
docker volume inspect app-data



docker run -d -p 5000:3000 -v volumeName:/fileSystemInTheContainer imageName
docker run -d -p 5000:3000 -v volumeName:/fileSystemInTheContainer --name nameToBeCreated imageName
docker run -d -p 5000:3000 -v app-data:/app/data --name redstart react-app


docker run -d -p 7001:3000 -v %cd%:/app --name redsalamander -e WATCHPACK_POLLING=true react-app
